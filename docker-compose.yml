version: '3.3'

services:
    postgres:
        image: postgres:latest
        container_name: postgres
        environment:
            POSTGRES_DB: "${DATABASE_NAME}"
            POSTGRES_USER: "${DATABASE_USER}"
            POSTGRES_PASSWORD: "${DATABASE_PASSWORD}"
            PGDATA: "/var/lib/postgresql/data"
        ports:
            - 5432:5432
        volumes:
            - ./pg_data:/var/lib/postgresql/data
        restart: always

    rabbitmq:
        image: rabbitmq:3-management
        hostname: rabbitmq
        container_name: rabbitmq
        ports:
            - 5672:5672
            - 15672:15672
        restart: always

    redis:
        image: redis:latest
        container_name: redis
        ports:
            - 6379:6379
        volumes:
            - ./redis_data:/data
        restart: always

    cache:
        image: memcached:latest
        container_name: cache
        ports:
            - 11211:11211

    app:
        container_name: webstore
        build: .
        tty: true
        command: python manage.py runserver 0.0.0.0:8000
        environment:
            DJANGO_SETTINGS_MODULE: "${DJANGO_SETTINGS_MODULE}"
            SECRET_KEY: "${SECRET_KEY}"
            DATABASE_HOST: "${DATABASE_HOST}"
            REDIS_HOST: "${REDIS_HOST}"
            CACHE_HOST: "${CACHE_HOST}"
        depends_on:
            - postgres
            - rabbitmq
            - redis
            - cache
        ports:
            - 8000:8000
        volumes:
            - ./:/webstore
        restart: always

    celery:
        container_name: celery
        build: .
        command: celery -A config worker -l INFO
        environment:
            DJANGO_SETTINGS_MODULE: "${DJANGO_SETTINGS_MODULE}"
            SECRET_KEY: "${SECRET_KEY}"
            DATABASE_HOST: "${DATABASE_HOST}"
        depends_on:
            - app
            - rabbitmq
        restart: always
